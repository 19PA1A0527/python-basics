{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled6.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyODo0YmEd0Y3SFtmOpbahe7",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/19PA1A0527/python-basics/blob/master/iris%20data%20set/527\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "81_DA-RrWbAt",
        "colab_type": "code",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "outputId": "8be3406d-03fb-4529-884d-6973d4d99552"
      },
      "source": [
        "import pandas as pd\n",
        "from google.colab import files\n",
        "uploaded=files.upload()\n",
        "\n"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-c9b8c723-8acc-4963-9522-0c81ed394751\" name=\"files[]\" multiple disabled />\n",
              "     <output id=\"result-c9b8c723-8acc-4963-9522-0c81ed394751\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving IRIS.csv to IRIS (1).csv\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4WXap_x9YoMe",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "1a59bc29-288d-460b-a76a-49b631e1a962"
      },
      "source": [
        "iris=load_iris()\n",
        "df=pd.DataFrame(iris['data'],columns=iris['feature_names'])\n",
        "df\n"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sepal length (cm)</th>\n",
              "      <th>sepal width (cm)</th>\n",
              "      <th>petal length (cm)</th>\n",
              "      <th>petal width (cm)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>6.7</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>6.3</td>\n",
              "      <td>2.5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>6.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>6.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>5.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>150 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)\n",
              "0                  5.1               3.5                1.4               0.2\n",
              "1                  4.9               3.0                1.4               0.2\n",
              "2                  4.7               3.2                1.3               0.2\n",
              "3                  4.6               3.1                1.5               0.2\n",
              "4                  5.0               3.6                1.4               0.2\n",
              "..                 ...               ...                ...               ...\n",
              "145                6.7               3.0                5.2               2.3\n",
              "146                6.3               2.5                5.0               1.9\n",
              "147                6.5               3.0                5.2               2.0\n",
              "148                6.2               3.4                5.4               2.3\n",
              "149                5.9               3.0                5.1               1.8\n",
              "\n",
              "[150 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yLMBge6QZkj7",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 312
        },
        "outputId": "2008c441-9e8b-4cbf-ddbf-0b6250780202"
      },
      "source": [
        "a=df['sepal length (cm)']\n",
        "b=df['petal length (cm)']\n",
        "plt.xlabel('sepal length')\n",
        "plt.ylabel('petal length')\n",
        "plt.title('scatter plot')\n",
        "plt.scatter(a,b,color='g')"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7f231f18ac18>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W6ybBudjl0A_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sx-U-IV_mMhJ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 717
        },
        "outputId": "9b67ed1e-0911-463b-a2bd-0823c3665511"
      },
      "source": [
        "k=df['PtalLengthCm']\n",
        "plt.hist(k,bins=100)\n",
        "plt.show()\n",
        "\n"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   2896\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2897\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2898\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'PtalLengthCm'",
            "\nDuring handling of the above exception, another exception occurred:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-43-9e4198c3810a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mk\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'PtalLengthCm'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   2993\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2994\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2995\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2996\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2997\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   2897\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2898\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2899\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_maybe_cast_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2900\u001b[0m         \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtolerance\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2901\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'PtalLengthCm'"
          ]
        }
      ]
    }
  ]
}